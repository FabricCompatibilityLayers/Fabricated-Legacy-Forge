#Main FML Access Transformer configuration file
# TileEntity addMapping
public aml.a(Ljava/lang/Class;Ljava/lang/String;)V
# EntityList addMappings
public le.a(Ljava/lang/Class;Ljava/lang/String;I)V
public le.a(Ljava/lang/Class;Ljava/lang/String;III)V
# EntityList nameToClassMap and idToClassMap and classToNameMap
public le.b
public le.d
public le.c
# RenderEngine
public azb.h # textureList
public azb.k # texturePack
# RenderManager renderers
public azv.o
# RenderBlocks - everything
public azc.*
public azc.*()
#RenderPlayer - make armorlist public and not final
public-f bap.h
#RenderBiped - armorlist again
public-f bad.k
#StringTranslate - make the current table and language public
public bd.b
public bd.d
# TileEntityRenderer - make the list of renderers public
public bbx.m
# CraftingManager - make the add recipe methods public
public vp.a(Ltu;[Ljava/lang/Object;)V
public vp.b(Ltu;[Ljava/lang/Object;)V
# WeightedRandomItem - make the "probability" public
public kf.a
# ItemStack - make itemId final
#public+f tu.c
# StatBase - Make statName public, no server side getter
public jb.a
# NetLoginHandler make the "complete connection" callback public so I can reset it during FML negotiation
public ij.a(Lij;Z)Z
# NetLoginHandler userName field
public ij.h
# EntityPlayerMP getNextWindowId
public ig.cd()V
public ig.cu
# EntityAITaskEntry class -> public
public mn
# EntityAITasks taskList
public mm.a
# BlockChest isOcelotBlockingChest (a bounding box check actually)
public ahy.n(Lxd;III)Z
# EntityLiving
public lm.aS # carryoverDamage
public lm.bn # tasks
public lm.bF # isJumping
# EntityAIOcelotSit
protected mz.a(Lxd;III)Z # nearestSittableBlock
protected mz.f()Z # isblocksittable
# CallableMinecraftVersion - sanity check the MC version
public b
public b.<init>(La;)V # constructor
# EntityAnimal
public og.d # inLove
# WorldType
public xo.<init>(ILjava/lang/String;)V
public xo.<init>(ILjava/lang/String;I)V
# ComponentVillage
public aep
# EntityVillager - addbuy and addsell and minmax lists
public qc.a(Lwv;ILjava/util/Random;F)V
public qc.b(Lwv;ILjava/util/Random;F)V
public qc.bO
public qc.bP
# GuiButtonMerchant
public aul
